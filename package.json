{
  "name": "chromium-lining",
  "description": "A silver lining for chromium",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node index.js",
    "start-deno": "deno run --env-file=.env  --allow-env --allow-read --allow-write --allow-run --allow-net index.js",
    "build": "deno compile --allow-env --allow-read --allow-write --allow-run --allow-net --output chromium-lining.exe index.js"
  },
  "author": "Nogonad",
  "license": "MIT",
  "private": true,
  "type": "module",
  "dependencies": {
    "dotenv": "^16.4.7",
    "puppeteer-core": "^23.10.4"
  },
  "eslintConfig": {
    "env": {
      "node": true,
      "es2022": true
    },
    "extends": "eslint:recommended",
    "overrides": [],
    "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module"
    },
    "rules": {
      "indent": [
        "error",
        "tab",
        {
          "ignoreComments": true,
          "SwitchCase": 1
        }
      ],
      "no-lonely-if": [
        "error"
      ],
      "linebreak-style": [
        "warn",
        "unix"
      ],
      "quotes": [
        "error",
        "single",
        {
          "allowTemplateLiterals": true,
          "avoidEscape": true
        }
      ],
      "semi": [
        "error",
        "always"
      ],
      "no-prototype-builtins": [
        "off"
      ],
      "default-case": [
        "error"
      ],
      "default-case-last": [
        "error"
      ],
      "curly": [
        "error"
      ],
      "no-else-return": [
        "error"
      ],
      "no-eval": [
        "error"
      ],
      "no-multi-assign": [
        "error"
      ],
      "no-trailing-spaces": [
        "warn",
        {
          "skipBlankLines": true,
          "ignoreComments": true
        }
      ],
      "no-unused-vars": [
        "warn"
      ],
      "no-unreachable": [
        "warn"
      ],
      "space-before-function-paren": [
        "error",
        "never"
      ],
      "keyword-spacing": [
        "error",
        {
          "before": true,
          "after": true,
          "overrides": {
            "if": {
              "before": true,
              "after": false
            },
            "for": {
              "before": true,
              "after": false
            },
            "switch": {
              "before": true,
              "after": false
            },
            "else": {
              "before": true,
              "after": true
            }
          }
        }
      ]
    }
  }
}
